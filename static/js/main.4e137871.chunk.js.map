{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialValues","appUsers","setAppUsers","user","Context","React","createContext","UserInput","label","defaultValue","disabled","propKey","useState","val","setVal","useEffect","className","type","value","onChange","e","currentTarget","name","defaultUser","firstName","lastName","phone","pause","t","Promise","resolve","setTimeout","UserForm","setUser","setDisabled","useContext","addUserToDB","a","currentUsers","onSubmit","preventDefault","target","newUser","CurrentUsers","sortColumn","setSortColumn","sortDir","setSortDir","sortDirection","_appUsers","useRef","console","log","current","length","sorted","sort","b","useSort","sortHandler","_sort","onClick","map","i","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e137871.chunk.js","sourcesContent":["import React, { useState, Dispatch, SetStateAction, useEffect } from \"react\";\nimport \"./App.css\";\n\ninterface IObjectKeys {\n  [key: string]: string;\n}\n\ninterface IUser extends IObjectKeys {\n  firstName: string;\n  lastName: string;\n  phone: string;\n}\n\ninterface IContext {\n  appUsers: IUser[] | null;\n  setAppUsers: Dispatch<SetStateAction<any>>;\n}\n\nconst initialValues: IContext = {\n  appUsers: [],\n  setAppUsers: (user) => {},\n};\n\nconst Context = React.createContext<IContext>(initialValues);\n\ninterface UserInputProps {\n  label: string;\n  defaultValue: string;\n  propKey: string;\n  disabled: boolean;\n}\n\nconst UserInput: React.FC<UserInputProps> = ({\n  label,\n  defaultValue,\n  disabled,\n  propKey,\n}) => {\n  const [val, setVal] = useState(\"\");\n  const changeHandler = (e: React.FormEvent<HTMLInputElement>) => {\n    setVal(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    if (disabled) {\n      setVal(\"...\");\n    } else {\n      setVal(defaultValue);\n    }\n  }, [disabled, defaultValue]);\n\n  return (\n    <div className=\"App-user-row\">\n      <div>{label}:</div>\n      <div>\n        <input\n          type=\"text\"\n          value={val}\n          onChange={changeHandler}\n          disabled={disabled}\n          name={propKey}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst defaultUser: IUser = {\n  firstName: \"Coder\",\n  lastName: \"Byte\",\n  phone: \"888-555-3333\",\n};\n\nconst pause = (t: number) => {\n  return new Promise((resolve: any) => {\n    setTimeout(() => {\n      resolve();\n    }, t);\n  });\n};\n\nconst UserForm = () => {\n  const [user, setUser] = useState<IUser>(defaultUser);\n  const [disabled, setDisabled] = useState(false);\n\n  const { setAppUsers } = React.useContext(Context);\n\n  const handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    const target = e.target as typeof e.target & {\n      firstName: { value: string };\n      lastName: { value: string };\n      phone: { value: string };\n    };\n    const newUser = {\n      firstName: target.firstName.value,\n      lastName: target.lastName.value,\n      phone: target.phone.value,\n    };\n    setUser(newUser);\n    addUserToDB(newUser);\n  };\n\n  const addUserToDB = async (user: IUser) => {\n    setDisabled(true);\n    setAppUsers((currentUsers: IUser[]) => [...currentUsers, user]);\n    await pause(250);\n    setUser(defaultUser);\n    setDisabled(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"app-user-form\">\n        <div className=\"App-user-row\">\n          <div />\n          <div>USER FORM</div>\n        </div>\n        <UserInput\n          label=\"User first name\"\n          propKey=\"firstName\"\n          defaultValue={user.firstName}\n          disabled={disabled}\n        />\n        <UserInput\n          label=\"User last name\"\n          propKey=\"lastName\"\n          defaultValue={user.lastName}\n          disabled={disabled}\n        />\n        <UserInput\n          label=\"User phone no.\"\n          propKey=\"phone\"\n          defaultValue={user.phone}\n          disabled={disabled}\n        />\n        <div className=\"App-user-row\">\n          <div />\n          <div>\n            <button type=\"submit\" className=\"app-submit-button\">\n              Add User\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nconst useSort = (sortColumn: string, sortDirection: string) => {\n  const { appUsers, setAppUsers } = React.useContext(Context);\n  const _appUsers = React.useRef(appUsers);\n\n  useEffect(() => {\n    console.log(_appUsers.current);\n\n    if (_appUsers && _appUsers.current && _appUsers.current.length > 0) {\n      const sorted = _appUsers.current.sort((a: IUser, b: IUser) => {\n        if (sortDirection === \"asc\") {\n          return a[sortColumn] > b[sortColumn] ? 1 : -1;\n        } else {\n          return a[sortColumn] < b[sortColumn] ? 1 : -1;\n        }\n      });\n      setAppUsers(sorted);\n    }\n  }, [sortColumn, sortDirection, setAppUsers]);\n};\n\nconst CurrentUsers = () => {\n  const { appUsers } = React.useContext(Context);\n  const [sortColumn, setSortColumn] = useState(\"\");\n  const [sortDir, setSortDir] = useState<string>(\"desc\");\n  useSort(sortColumn, sortDir);\n\n  const sortHandler = (_sort: string) => {\n    let dir;\n    if (sortColumn === _sort) {\n      dir = sortDir === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      dir = \"asc\";\n    }\n    setSortDir(dir);\n    setSortColumn(_sort);\n  };\n  return (\n    <div>\n      <div className=\"app-table-row\">\n        <div className=\"App-link\" onClick={() => sortHandler(\"firstName\")}>\n          First Name\n        </div>\n        <div className=\"App-link\" onClick={() => sortHandler(\"lastName\")}>\n          Last Name\n        </div>\n        <div className=\"App-link\" onClick={() => sortHandler(\"phone\")}>\n          Phone\n        </div>\n      </div>\n      <div className=\"app-data-table\">\n        {appUsers &&\n          appUsers.length > 0 &&\n          appUsers.map((user, i) => (\n            <div className=\"app-data-row\" key={`user-${i}`}>\n              <div>{user.firstName}</div>\n              <div>{user.lastName}</div>\n              <div>{user.phone}</div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [appUsers, setAppUsers] = useState([]);\n  return (\n    <div className=\"App\">\n      <Context.Provider value={{ appUsers, setAppUsers }}>\n        <UserForm />\n        <CurrentUsers />\n      </Context.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}